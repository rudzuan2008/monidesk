// Mixins
// --------------------------
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
@mixin linear-gradient($type,$param1,$param2,$param3) {
  background-image: -webkit-linear-gradient($type, $param1,$param2,$param3);
	background-image: -moz-linear-gradient($type, $param1,$param2,$param3);
	background-image: -o-linear-gradient($type, $param1,$param2,$param3);
	background-image: -ms-linear-gradient($type, $param1,$param2,$param3);	
	
}
@function set-text-color($color) {
  @if (lightness($color) > 30) {
    @return #000000; // Lighter backgorund, return dark color
  } @else {
    @return #ffffff; // Darker background, return light color
  }
}
@mixin alpha-attribute($attribute, $color, $background: white) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  @if ($percent < 100%) { #{$attribute}: $solid-color; }
  #{$attribute}: $color;
}

@mixin color-button($text, $color, $background: white) {
  @include alpha-attribute('background', $color, $background);
  border: 1px solid;
  @include alpha-attribute('border-color', rgba(black, 0.7), $background);
  @include alpha-attribute('color', $text, $background);
  @include box-shadow(rgba(white, 0.2) 0 1px 0 inset);
  
  &:focus, &:hover {
    @include alpha-attribute('background', transparentize($color, 0.2), $background);
    @include alpha-attribute('color', opacify($text, 1), $background);
  }
  
  &:focus {
    outline: none;
  }
  
  &:active {
    @include alpha-attribute('background', opacify($color, 0.1), $background);
    @include box-shadow(none);
  }
}
	
@mixin inset-text-effect() {
	-webkit-background-clip: text;
    -moz-background-clip: text;
    background-clip: text;
    color: transparent;
}
@mixin text-shadow-effect($type) {
	@if ($type=='Glow') {
		text-shadow: 0px 0px 6px rgba(255,255,255,0.7);
	} @elseif ($type=='Letterpress') {
		color: rgba(0,0,0,0.6);
		text-shadow: 2px 2px 3px rgba(255,255,255,0.1);
	} @elseif ($type=='HardShadow') {
		text-shadow: 6px 6px 0px rgba(0,0,0,0.2);		
	} @elseif ($type=='DoubleShadow') {
		text-shadow: 4px 3px 0px #fff, 9px 8px 0px rgba(0,0,0,0.15);		
	} @elseif ($type=='DownDistant') {
		text-shadow: 0px 3px 0px #b2a98f,
                 0px 14px 10px rgba(0,0,0,0.15),
                 0px 24px 2px rgba(0,0,0,0.1),
                 0px 34px 30px rgba(0,0,0,0.1);		
	} @elseif ($type=='CloseHeavy') {
		text-shadow: 0px 4px 3px rgba(0,0,0,0.4),
             	 0px 8px 13px rgba(0,0,0,0.1),
             	 0px 18px 23px rgba(0,0,0,0.1);		
	} @elseif ($type=='3D') {
		text-shadow: 0 1px 0 #ccc, 
               0 2px 0 #c9c9c9,
               0 3px 0 #bbb,
               0 4px 0 #b9b9b9,
               0 5px 0 #aaa,
               0 6px 1px rgba(0,0,0,.1),
               0 0 5px rgba(0,0,0,.1),
               0 1px 3px rgba(0,0,0,.3),
               0 3px 5px rgba(0,0,0,.2),
               0 5px 10px rgba(0,0,0,.25),
               0 10px 10px rgba(0,0,0,.2),
               0 20px 20px rgba(0,0,0,.15);		
    } @elseif ($type=='Inset') {
    	@include inset-text-effect();
    	text-shadow: rgba(255,255,255,0.5) 0px 3px 3px;   
    } @elseif ($type=='Superhero') {
    	text-shadow: -10px 10px 0px #00e6e6,
                 -20px 20px 0px #01cccc,
                 -30px 30px 0px #00bdbd;	
    } @elseif ($type=='MultipleLight') {
    	text-shadow: 0px 15px 5px rgba(0,0,0,0.1),
                 10px 20px 5px rgba(0,0,0,0.05),
                 -10px 20px 5px rgba(0,0,0,0.05);
    } @elseif ($type=='Emboss') {
    	color: rgba(0,0,0,0.6);
    	text-shadow: 2px 8px 6px rgba(0,0,0,0.2),
                 0px -5px 35px rgba(255,255,255,0.3);                            
	} @else {
    	text-shadow: 2px 2px;
    }	
}

@mixin fa-icon() {
  display: inline-block;
  font: normal normal normal #{$fa-font-size-base}/1 FontAwesome; // shortening font declaration
  font-size: inherit; // can't have font-size inherit on line above, so need to override
  text-rendering: auto; // optimizelegibility throws things off #1094
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0, 0); // ensures no half-pixel rendering in firefox

}

@mixin fa-icon-rotate($degrees, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
          transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: scale($horiz, $vert);
      -ms-transform: scale($horiz, $vert);
          transform: scale($horiz, $vert);
}
// Only display content to screen readers. A la Bootstrap 4.
//
// See: http://a11yproject.com/posts/how-to-hide-content/

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}
